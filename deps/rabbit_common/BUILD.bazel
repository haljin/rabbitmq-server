load("//:rabbitmq.bzl", "RABBITMQ_ERLC_OPTS", "APP_VERSION", "erlang_libs", "ct_tests")

py_binary(
    name = "codegen",
    srcs = [
        "codegen.py",
    ],
    deps = [
        "//deps/rabbitmq_codegen:amqp_codegen",
    ],
    imports = ["../../deps/rabbitmq_codegen"],
)

genrule(
    name = "generated_headers",
    srcs = [
        "//deps/rabbitmq_codegen:amqp-rabbitmq-0.9.1.json",
        "//deps/rabbitmq_codegen:credit_extension.json",
        "//deps/rabbitmq_codegen:amqp-rabbitmq-0.8.json",
    ],
    outs = ["include/rabbit_framing.hrl"],
    tools = [":codegen"],
    cmd = "$(location :codegen) --ignore-conflicts header $(SRCS) $@",
)

genrule(
    name = "rabbit_framing_amqp_0_9_1.erl",
    srcs = [
        "//deps/rabbitmq_codegen:amqp-rabbitmq-0.9.1.json",
    ],
    outs = ["src/rabbit_framing_amqp_0_9_1.erl"],
    tools = [":codegen"],
    cmd = "$(location :codegen) body $(SRCS) $@",
)

genrule(
    name = "rabbit_framing_amqp_0_8.erl",
    srcs = [
        "//deps/rabbitmq_codegen:amqp-rabbitmq-0.8.json",
    ],
    outs = ["src/rabbit_framing_amqp_0_8.erl"],
    tools = [":codegen"],
    cmd = "$(location :codegen) body $(SRCS) $@",
)

erlang_libs(
    app_name = "rabbit_common",
    app_description = "Modules shared by rabbitmq-server and rabbitmq-erlang-client",
    app_version = APP_VERSION,
    extra_apps = [
        "compiler",
        "crypto",
        "public_key",
        "sasl",
        "ssl",
        "syntax_tools",
        "tools",
        "xmerl",
    ],
    hdrs = ["include/rabbit_framing.hrl"] + glob(["include/*.hrl"]),
    srcs = glob(["src/*.erl"]) + ["src/rabbit_framing_amqp_0_8.erl", "src/rabbit_framing_amqp_0_9_1.erl"],
    erlc_opts = RABBITMQ_ERLC_OPTS,
    deps = [
        "@lager//:lager",
    ],
    runtime_deps = [
        "@jsx//:jsx",
        "@ranch//:ranch",
        "@recon//:recon",
        "@credentials-obfuscation//:credentials_obfuscation",
    ],
    visibility = ["//visibility:public"],
)

ct_tests(
    name = "rabbit_env_SUITE",
    app_name = "rabbit_common",
    suites = ["test/rabbit_env_SUITE.erl"],
    hdrs = glob(["include/*.hrl"]),
    deps = [
        ":rabbit_common_test",
        "//deps/rabbit:rabbit",
        "@lager//:lager",
        "@proper//:proper",
    ],
    size = "small",
)

ct_tests(
    name = "supervisor2_SUITE",
    app_name = "rabbit_common",
    suites = ["test/supervisor2_SUITE.erl"],
    hdrs = glob(["include/*.hrl"]),
    deps = [
        ":rabbit_common_test",
    ],
    size = "small",
)

ct_tests(
    name = "unit_priority_queue_SUITE",
    app_name = "rabbit_common",
    suites = ["test/unit_priority_queue_SUITE.erl"],
    hdrs = glob(["include/*.hrl"]),
    deps = [
        ":rabbit_common_test",
    ],
    size = "small",
)

ct_tests(
    name = "unit_SUITE",
    app_name = "rabbit_common",
    suites = ["test/unit_SUITE.erl", "test/gen_server2_test_server.erl"],
    hdrs = glob(["include/*.hrl"]),
    deps = [
        ":rabbit_common_test",
        "@proper//:proper",
        "@lager//:lager",
        "@credentials-obfuscation//:credentials_obfuscation",
    ],
    size = "small",
)

ct_tests(
    name = "worker_pool_SUITE",
    app_name = "rabbit_common",
    suites = ["test/worker_pool_SUITE.erl"],
    hdrs = glob(["include/*.hrl"]),
    deps = [
        ":rabbit_common_test",
        "@lager//:lager",
    ],
    size = "small",
)

